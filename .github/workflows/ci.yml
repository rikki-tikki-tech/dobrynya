name: CD

on: push

jobs:
  test:
    runs-on: self-hosted
    steps:
      - run: echo "🎉 The job was automatically triggered by a ${{ github.event_name }} event."
      - run: echo "🔎 The name of your branch is ${{ github.ref }}"

      - name: Check out repository code
        uses: actions/checkout@v4

      - run: echo "💡 The ${{ github.repository }} repository has been cloned to the runner."

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 🧰 Install dependencies
        run: npm ci

      - name: 🧹 Check code style
        run: npm run lint

  build:
    runs-on: self-hosted
    needs: test
    steps:
      - name: Check out repository code
        uses: actions/checkout@v4

      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 🧰 Install dependencies
        run: npm ci

      - name: 📦 Build project
        run: npm run build

      - name: Login to Container Registry
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 🐳 Docker image build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: utrobin/dobrynya:latest
          context: .

  deploy:
    runs-on: self-hosted
    needs: build

    steps:
      - name: 🚀 Deploy to server Svarog via SSH action
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.DEPLOY_HOST_DOBRYNYA }}
          username: "deployer"
          key: ${{ secrets.DEPLOY_KEY }}
          script_stop: true
          script: |
            docker info
            
            # Clean old images
            docker container prune -f
            docker image prune -f
            
            # Start
            if [[ -n "$(docker ps -a -q)" ]]; then docker stop $(docker ps -a -q); fi
            
            docker pull utrobin/dobrynya
            docker run -d --restart always -p 4000:4000 utrobin/dobrynya
            
            echo Container updated successfully.
